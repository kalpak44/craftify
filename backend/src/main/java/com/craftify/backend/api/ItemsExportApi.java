/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.15.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.craftify.backend.api;

import com.craftify.backend.api.model.Status;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.validation.Valid;
import jakarta.validation.constraints.Size;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.lang.Nullable;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;
import java.util.UUID;

@Validated
@Tag(name = "Items", description = "the Items API")
public interface ItemsExportApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    public static final String PATH_ITEMS_EXPORT_GET = "/items:export";

    /**
     * GET /items:export : Export items as CSV (applies same filters as list)
     *
     * @param q          Search by code or name (substring, case-insensitive) (optional)
     * @param status     (optional)
     * @param categoryId (optional)
     * @param uom        Filter by base or additional UoM code (optional)
     * @param ids        Optional selection (comma-separated UUIDs) (optional)
     * @return CSV stream (status code 200)
     */
    @Operation(
            operationId = "itemsExportGet",
            summary = "Export items as CSV (applies same filters as list)",
            tags = {"Items"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "CSV stream", content = {
                            @Content(mediaType = "text/csv", schema = @Schema(implementation = org.springframework.core.io.Resource.class))
                    })
            },
            security = {
                    @SecurityRequirement(name = "bearerAuth")
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = ItemsExportApi.PATH_ITEMS_EXPORT_GET,
            produces = {"text/csv"}
    )

    default ResponseEntity<org.springframework.core.io.Resource> itemsExportGet(
            @Parameter(name = "q", description = "Search by code or name (substring, case-insensitive)", in = ParameterIn.QUERY) @Valid @RequestParam(value = "q", required = false) @Nullable String q,
            @Parameter(name = "status", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "status", required = false) @Nullable Status status,
            @Parameter(name = "categoryId", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "categoryId", required = false) @Nullable UUID categoryId,
            @Size(min = 1, max = 16) @Parameter(name = "uom", description = "Filter by base or additional UoM code", in = ParameterIn.QUERY) @Valid @RequestParam(value = "uom", required = false) @Nullable String uom,
            @Parameter(name = "ids", description = "Optional selection (comma-separated UUIDs)", in = ParameterIn.QUERY) @Valid @RequestParam(value = "ids", required = false) @Nullable String ids
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
